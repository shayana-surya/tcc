#include <rcpp.h>
using namespace Rcpp;

// [[Rcpp::export]]
NumericVector timesTwo(NumericVector x) {
  return x * 2;
}

NumericMatrix createEuclideanDistance(NumericMatrixmatrizDistancia,NumericMatrix CemigData, n) {
  
  Distancematrix <- dist.mat(diffCemigData,"alimentador","y","x",diffCemigData,"alimentador","y","x", unit = "km")
  Distancematrix <- matrizDistancia[order(matrizDistancia$from,matrizDistancia$distance),]
  x = 1
  for (int i=1; i < n; ++i) {
    for (int j=1; j < n; ++j) {
      matrizDistancia(x,1) = CemigData(i,5)
      matrizDistancia(x,2) = CemigData(j,5)
      matrizDistancia(x,3) = 0
      matrizDistancia(x,4) = CalculateDistance(CemigData(i,2),CemigData(i,3),CemigData(j,2),CemigData(j,3))
       ++x
    }
  }
  
  return (matrizDistancia);
}

double CalculateDistance(double x1, double y1, double x2, double y2)
{	
	double diffx = x1 - x2;
	double diffy = y1 - y2;
	double dist = pow(diffx, 2) + pow(diffy, 2);
	double distance = sqrt (dist);

return distance;
}

</rcpp.h>